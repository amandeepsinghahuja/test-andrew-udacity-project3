version: 2.1
## Destroy environment only blueprint
commands:
  destroy-environment:
    description: Destroy back-end and front-end cloudformation stacks given a workflow ID.
    parameters:
      workflow_id: 
        type: string
      event:
        type: string
    steps:
      - run:
          name: Destroy environments
          when: on_fail
          command: |
            echo " Destroying Environment: "-<<parameters.workflow_id>>
            echo " aws s3 rm s3://udapeople-<<parameters.workflow_id>> --recursive "
            aws s3 rm s3://udapeople-<<parameters.workflow_id>> --recursive
            aws cloudformation delete-stack --stack-name udapeople-backend-<<parameters.workflow_id>>
            echo " aws cloudformation delete-stack --stack-name udapeople-backend-<<parameters.workflow_id>> "
            aws cloudformation delete-stack --stack-name udapeople-frontend-<<parameters.workflow_id>>
# aws s3 rm s3://udapeople << parameters.workflow_id >> --recursive  ## didn't delete!
#  aws s3 rb --force s3://udapeople << parameters.workflow_id >> 

defaults: &defaults   ## anchor & aliases
    docker:
      - image: circleci/node:13.8.0

jobs:
  build-frontend:
    <<: *defaults  
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Build front-end
          command: |
            cd frontend
            npm install
            npm run build
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-build

  build-backend:
    <<: *defaults  
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: Back-end build
          command: |
            cd backend
            npm install
            npm run build
      - save_cache:
          paths: [backend/node_modules]
          key: backend-build

  test-frontend:
    <<: *defaults  
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run: 
          name: Run Frontend Test
          command: |
            cd frontend
            npm install
            npm run test
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-build

  test-backend:
    <<: *defaults  
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run: 
          name: Run Backend Test
          command: |
            cd backend
            npm install
            npm run test
      - save_cache:
          paths: [backend/node_modules]
          key: backend-build

  scan-frontend:
    <<: *defaults  
    steps: 
      - checkout                   # Checkout code from git
      - restore_cache:             # Restore from cache
          keys: [frontend-build]
      - run:                       # Your job code here
          name: Scan frontend Dependencies
          command:
            cd frontend
            npm install
            npm audit --aidit-level=critical || true

  scan-backend:
    <<: *defaults  
    steps: 
      - checkout                   # Checkout code from git
      - restore_cache:             # Restore from cache
          keys: [backend-build]
      - run:                       # Your job code here
          name: Scan Backend Dependencies
          command:
            cd backend
            npm install
            npm audit --aidit-level=critical || true

  destroy-infrastructure:
    docker:
      - image: amazon/aws-cli     # Docker image here that supports AWS CLI
    steps:
      - checkout      # Checkout code from git
      - run: exit 1  # kicks off the destroy-environment
      - destroy-environment:
          workflow_id:  "5cfa402" # "${CIRCLE_WORKFLOW_ID:0:7}"
          event: on_fail
## --filters "Name=tag:Name.Values=backend-${CIRCLE_WORKFLOW_ID:0:7}" \
## --query 'Reservations[*].Instances[*].PublicIpAddress' \
workflows:
  CICDPipeline-1:
    jobs:
      - destroy-infrastructure
##          requires: [test-frontend, test-backend, scan-frontend, scan-backend]
#          filters:
#            branches:
#              only: [test-feature-branch]

